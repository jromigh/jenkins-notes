apply plugin: 'groovy'

ext {
    jobDslVersion = '1.66'
    jenkinsVersion = '2.86'
}

sourceSets {
    jobs {
        groovy {
            srcDirs 'jobs'
        }
    }
}

repositories {
    // Begin modification by Jake Romigh -- move jcenter() below the maven call to prevent "bootstrap-1.3.2-core-assets.jar missing" error
    maven {
        url 'https://repo.jenkins-ci.org/public/'
    }
    jcenter()
    // End modification
}

configurations {
    testPlugins {}

    // see JENKINS-45512
    testCompile {
        exclude group: 'xalan'
        exclude group: 'xerces'
    }
}

dependencies {
    // Begin modifications by Jake Romigh
    // Use newer Groovy
    //testCompile 'org.spockframework:spock-core:0.7-groovy-1.8'
    testCompile 'org.spockframework:spock-core:1.1-groovy-2.4'

    // Add missing dependancy
    // https://stackoverflow.com/questions/10234201/appengine-error-java-lang-noclassdeffounderror-org-w3c-dom-elementtraversal
    testCompile group: 'xml-apis', name: 'xml-apis', version: '1.4.01'


    // Jenkins test harness dependencies
    testCompile 'org.jenkins-ci.main:jenkins-test-harness:2.31' // Jake Romigh: Changed 2.8 -> 2.31
    testCompile "org.jenkins-ci.main:jenkins-war:${jenkinsVersion}"

    // Jenkins no longer publishes a war-for-test artifact https://jenkins.io/changelog/#v2.64, but newer jenkins-test-harness does not require it!
    //testCompile "org.jenkins-ci.main:jenkins-war:${jenkinsVersion}:war-for-test@jar"
    //testCompile "org.jenkins-ci.main:jenkins-war:${jenkinsVersion}@war" // For older versions of jenkins-test-harness

    // Job DSL plugin including plugin dependencies
    testCompile "org.jenkins-ci.plugins:job-dsl:${jobDslVersion}"
    testCompile "org.jenkins-ci.plugins:job-dsl:${jobDslVersion}@jar"
    testCompile 'org.jenkins-ci.plugins:structs:1.6@jar'


    /*
        plugins to install in test instance
        list generate with this Groovy script in the Jenkins Script Console:
        jenkins.model.Jenkins.instance.pluginManager.plugins.findAll({ !(it.shortName ==~ /job-dsl|structs/) }).each {
            println "testPlugins '${it.manifest.mainAttributes.getValue("Group-Id")}:${it.shortName}:${it.version}'"
        }
    */

    testPlugins 'org.jenkins-ci.plugins:p4:1.8.0'
    testPlugins 'org.jenkins-ci.plugins:timestamper:1.8.8'
    testPlugins 'org.jenkins-ci.plugins:view-job-filters:1.27'

    // End modifications

}

task resolveTestPlugins(type: Copy) {
    from configurations.testPlugins
    into new File(sourceSets.test.output.resourcesDir, 'test-dependencies')
    include '*.hpi'
    include '*.jpi'

    doLast {
        def baseNames = source.collect { it.name[0..it.name.lastIndexOf('.')-1] }
        new File(destinationDir, 'index').setText(baseNames.join('\n'), 'UTF-8')
    }
}

test {
    dependsOn tasks.resolveTestPlugins
    inputs.files sourceSets.jobs.groovy.srcDirs

    // set build directory for Jenkins test harness, JENKINS-26331
    systemProperty 'buildDirectory', project.buildDir.absolutePath
}
